@model MKTS.Controllers.EnrollmentData
@{
    var barChartHight = 100;
    //if (Model.Districts.Count() > 2)
    //{
    //    barChartHight = Model.Districts.Count() * 25;
    //}
}
<!-- Small boxes (Stat box) -->
<div class="row">
    <div class="col-lg-4 col-xs-6">
        <!-- small box -->
        <div class="small-box bg-Mtks-blue">
            <div class="inner">
                <h3 class="cen">@(String.Format("{0:#,##}", (Model.DistrictBoys.Sum() + Model.DistrictGirls.Sum())))</h3>
                <p>Total Participants</p>
            </div>
            <div class="icon">
                <i class="ion ion-bag"></i>
            </div>
            @*<a href="#" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a>*@
        </div>
    </div>
    <!-- ./col -->

    <div class="col-lg-4 col-xs-6">
        <!-- small box -->
        <div class="small-box bg-green">
            <div class="inner">
                <h3 class="cen">@(String.Format("{0:#,##}", (Model.DistrictBoys.Sum())))</h3>
                <p>Male Participants</p>
            </div>
            <div class="icon">
                <i class="ion ion-stats-bars"></i>
            </div>
            @*<a href="#" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a>*@
        </div>
    </div>
    <!-- ./col -->
    <div class="col-lg-4 col-xs-6">
        <!-- small box -->
        <div class="small-box bg-yellow">
            <div class="inner">
                <h3 class="cen">
                    @(String.Format("{0:#,##}", Model.DistrictGirls.Sum()))
                </h3>

                <p>Female Participants</p>

            </div>

            <div class="icon">
                <i class="ion ion-person-add"></i>
            </div>

            @*<a href="#" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a>*@

        </div>
    </div>
    <!-- ./col -->

</div>



<!-- /.row(main row) -->
<!-- /.col(LEFT) -->
<div class="row">
    <div class="col-md-6">
        <!-- Bar chart -->
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title cen">Participants by Facilitation</h3>
                @*<div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                    </div>*@
            </div>
            <div class="box-body">
                <div class="chart">
                    <canvas id="Partner-chart" width="800" height="500"></canvas>
                </div>
            </div>
            <!-- /.box-body -->
        </div>
        <!-- /.box -->
    </div>

    <!-- /.box -->
    <div class="col-md-6">
        <!-- Grade Wise Bar CHART -->
        <div class="box box-info">
            <div class="box-header with-border">
                <h3 class="box-title cen">Participants by Skill Enhanced</h3>
                @*<div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                    </div>*@
            </div>
            <div class="box-body">
                <div class="chart">
                    <canvas id="grade-chart" width="800" height="500"></canvas>
                </div>
            </div>
            <!-- /.box-body -->
        </div>

    </div>
    <!-- /.col(RIGHT) -->
</div>

<!-- District row -->
<div class="row">
    <div class="col-md-12">
        <!-- BAR CHART -->
        <div class="box box-success">
            <div class="box-header with-border">
                <h3 class="box-title cen">Participants by district</h3>
                @*<div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                    </div>*@
            </div>
            <div class="box-body">
                <div class="chart">
                    <canvas id="bar-chart" height=@barChartHight></canvas>
                </div>
            </div>
            <!-- /.box-body -->
        </div>


    </div>
</div>

@section Styles {
    <!-- DataTables -->
    <link rel="stylesheet" href="~/libs/datatables/css/dataTables.bootstrap.min.css">

    .bg-aqua    {
    background-color: #00c0ef
    !important;
    }

    .bg-green {
    background-color: #00a65a !important
    }

    .bg-Mtks-blue {
    background-color: #202daf !important
    }

    .bg-yellow {
    background-color: #f39c12 !important
    }

    .bg-green-gradient {
    background: #00a65a !important;
    color: #fff;
    }

}
<script src="~/lib/ChartJs/Chart.min.js"></script>
<script>
    $(function () {

        /* ChartJS
         * -------
         * Here we will create a few charts using ChartJS
         */

        //-------------
        //- DONUT CHART -
        //--------------


        //-------------
        //- BAR CHART -
        //-------------

        new Chart(document.getElementById("bar-chart"), {
            type: 'bar',
            data: {

               // labels: ["AJK", "Balochi", "GB", "ICT", "KP", "Punjab", "Sindh"],
                labels: @Html.Raw(Json.Serialize(Model.Districts)),

                datasets: [
                    {
                        label: "Girls Enrolled",
                        backgroundColor: 'rgba(215, 26, 50, 1)',
                        data: @Html.Raw(Json.Serialize(Model.DistrictGirls)),
                        //data: [3666, 3223, 3002, 5193, 2924, 4946, 3504]
                    },
                    {
                        label: "Boys Enrolled",
                        backgroundColor: 'rgba(102,64,58,1)',
                        //data: [3666, 3223, 3002, 5193, 2924, 4946, 3504]
                        data:@Html.Raw(Json.Serialize(Model.DistrictBoys)) ,
                    }
                ]
            },
            options: {
                scales: {
                    xAxes: [{
                        stacked: true,
                    }],
                    yAxes: [{
                        stacked: true
                    }]
                },
                tooltips: {
                    mode: 'index',
                    intersect: false,
                    callbacks: {
                        afterTitle: function () {
                            window.total = 0;
                        },
                        label: function (tooltipItem, data) {
                            var corporation = data.datasets[tooltipItem.datasetIndex].label;
                            var valor = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];
                            window.total += valor;
                            return corporation + ": " + valor.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
                        },
                        footer: function () {
                            return "TOTAL: " + window.total.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
                        }
                    }
                },

                // },
                onComplete: function () {

                    var ctx = this.chart.ctx;
                    ctx.font = this.scale.font;
                    ctx.fillStyle = this.scale.textColor
                    ctx.textAlign = "center";
                    ctx.textBaseline = "bottom";

                    this.datasets.forEach(function (dataset) {
                        dataset.points.forEach(function (points) {
                            ctx.fillText(points.value, points.x, points.y - 10);
                        });
                    })
                }

            }

        });

        //-------------
        //- Partner CHART -
        //-------------

        new Chart(document.getElementById("Partner-chart"), {
            type: 'bar',
            data: {

               // labels: ["AJK", "Balochi", "GB", "ICT", "KP", "Punjab", "Sindh"],
                labels: @Html.Raw(Json.Serialize(Model.Partners)),

                datasets: [
                    {
                        label: "Girls Enrolled",
                        backgroundColor: 'rgba(215, 26, 50, 0.7)',
                        data: @Html.Raw(Json.Serialize(Model.PartnerGirls)),
                        //data: [3666, 3223, 3002, 5193, 2924, 4946, 3504]
                    },
                    {
                        label: "Boys Enrolled",
                        backgroundColor: 'rgba(102,64,58, 0.7)',
                        //border: 'rgba(102,64,58, 1)',
                        //data: [3666, 3223, 3002, 5193, 2924, 4946, 3504]
                        data:@Html.Raw(Json.Serialize(Model.partnerBoys)) ,
                    }
                ]
            },
            options: {

                tooltips: {
                    mode: 'index',
                    intersect: false,
                    callbacks: {
                        afterTitle: function () {
                            window.total = 0;
                        },
                        label: function (tooltipItem, data) {
                            var corporation = data.datasets[tooltipItem.datasetIndex].label;
                            var valor = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];
                            window.total += valor;
                            return corporation + ": " + valor.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
                        },
                        footer: function () {
                            return "TOTAL: " + window.total.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
                        }
                    }
                },
                //legend: { display: false },
                title: {
                    //display: true,
                    //text: 'Predicted world population (millions) in 2050'
                },
                // },
                onComplete: function () {

                    var ctx = this.chart.ctx;
                    ctx.font = this.scale.font;
                    ctx.fillStyle = this.scale.textColor
                    ctx.textAlign = "center";
                    ctx.textBaseline = "bottom";

                    this.datasets.forEach(function (dataset) {
                        dataset.points.forEach(function (points) {
                            ctx.fillText(points.value, points.x, points.y - 10);
                        });
                    })
                }

            }

        });
        //-------------
        //- Line Chart -
        //-------------
        new Chart(document.getElementById("grade-chart"), {
            type: 'bar',
            data: {
                //labels: ["Plastic Mat", " Water Cooler", "Black Board", "Teacher Chair", "Attendance Registar", "Water Tank", "	Desk", "Cupboard/Rack", "Electric Cooler"],
                labels: @Html.Raw(Json.Serialize(Model.Skills)) ,
                datasets: [{
                    //data: [41, 31, 39, 31, 34, 35, 32, 36, 30],
                  data:  @Html.Raw(Json.Serialize(Model.ClassGirls)),
                    label: "Girls Enrolled",

                    backgroundColor: "rgba(250,164,26)",
                    fill: false
                }, {
                    //data: [49, 40, 44, 48, 41, 48, 46, 40, 43],
                     data:  @Html.Raw(Json.Serialize(Model.ClassBoys)),
                    label: "Boys Enrolled",
                    backgroundColor: "rgba(222, 217, 201)",
                    fill: false
                },
                ]
            },
            options: {
                title: {
                    // display: true,
                    //  text: 'World population per region (in millions)'
                }
            }
        });

    })</script>
